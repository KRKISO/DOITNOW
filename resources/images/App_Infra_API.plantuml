@startuml
!define RECTANGLE_WIDTH 150

title Application Architecture with Routes

skinparam componentStyle rectangle
skinparam rectangle {
    BackgroundColor white
    BorderColor black
    FontColor black
}
skinparam node {
    BackgroundColor #DDDDDD
    BorderColor black
    FontColor black
}
skinparam package {
    BackgroundColor #F2F2F2
    BorderColor black
    FontColor black
}

node "AWS Cloud" {
    rectangle "CI/CD Pipeline\n(GitLab CI)" as pipeline #lightblue

    node "EC2 Instance" {
        node "Docker Cluster" {
            package "Reverse Proxy" {
                component "Nginx\nReverse Proxy" as nginx
            }
            nginx --> "http://mainapp:8000" : "Forward Requests"
            
            package "Application" {
                component "Main App" as app
                component "Frontend & API" as frontend_api
                app --> frontend_api
                
                package "Frontend Routes" as frontend_routes {
                    ["/"] -down-> "Home Page"
                    ["/login"] -down-> "Login Page"
                    ["/register"] -down-> "Register Page"
                    ["/account"] -down-> "Account Page"
                    ["/logout"] -down-> "Logout Action"
                }

                package "API Routes" as api_routes {
                    ["/api/tasks"] -down-> "Get Tasks"
                    ["/api/tasks/{id}"] -down-> "Get Task by ID"
                    ["/api/tasks"] -down-> "Create Task"
                    ["/api/tasks/{id}"] -down-> "Update Task"
                    ["/api/tasks/{id}"] -down-> "Delete Task"
                    ["/add_task/<int:tasklist_id>"] -down-> "Add Task"
                    ["/delete_task/<int:task_id>"] -down-> "Delete Task"
                    ["/create_tasklist"] -down-> "Create Task List"
                    ["/delete_tasklist/<int:tasklist_id>"] -down-> "Delete Task List"
                    ["/store_ip"] -down-> "Store IP Address"
                }

                frontend_api --> frontend_routes
                frontend_api --> api_routes
            }

            package "Database" {
                component "MySQL\nDatabase" as db
            }
            
            app --> db : "DB Queries\n(SQL)"
        }
    }

    pipeline --> "EC2 Instance" : "Deploy"
}

@enduml
